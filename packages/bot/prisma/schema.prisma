datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["selectRelationCount"]
}

// content delivery

model Image {
  id       Int     @id @default(autoincrement())
  content  String
  original String?
  Drink    Drink?  @relation(fields: [drinkId], references: [id])
  drinkId  Int?
}

// order

model Drink {
  id     Int     @id @default(autoincrement())
  name   String
  images Image[]
}

// users

model User {
  id String @id

  // opted in to
  optWordCount Boolean @default(false)

  // stats
  words WordUse[]
}

model WordUse {
  word    String
  userId  String
  user    User    @relation(fields: [userId], references: [id])
  isCurse Boolean @default(false)

  total Int @default(0)

  @@id([word, userId])
}

// guilds
model Guild {
  id String @id

  // -- SETTINGS --
  // channel list
  channelListMode ListMode
  channelList     String[]
  // guild board
  boards          GuildBoard[]
}

model GuildBoard {
  id      Int    @id @default(autoincrement())
  guild   Guild  @relation(fields: [guildId], references: [id])
  guildId String

  channelId String
  emoji     String

  messages GuildBoardMessage[]
}

model GuildBoardMessage {
  reactedMessageId String
  messageId        String
  reactedChannelId String
  channelId        String

  board   GuildBoard @relation(fields: [boardId], references: [id])
  boardId Int

  @@id([reactedMessageId, reactedChannelId])
}

// common
enum ListMode {
  Blacklist
  Whitelist
}
